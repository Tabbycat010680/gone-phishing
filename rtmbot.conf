DEBUG: True # make this False in production
SLACK_TOKEN: "" # "xoxb-11111111111-222222222222222" # api token
ACTIVE_PLUGINS:
    - plugins.URLMonitor.URLMonitor
    - plugins.AddressMonitor.AddressMonitor
    # - plugins.EarlyWarning.EarlyWarning
    - plugins.utils.CommunityWarning
    - plugins.utils.ChannelJoiner

# Channel Joiner
# URL Monitor
# User Checker (check emails and compare cross-slack)
# Address Checker

# Essential
# - TODO Adds bot to all channels first step
# - Private channels will monitor links (from his database and google safebrowser API) and send message to user if harmful
# - Public channels ^ same
# - DM's and Slackbot ^ same after "testing is done"
# - DM who installed the bot gets a Malware & phishing link sent to them (owner)
# - Will monitor DM's and slackbot (after next release) - analyze any link - send separate DM to the person who received the link saying it's a scam as well as the user gets a DM
# - internal database and utilizing google safebrowser API
# - Automated blacklist created from bot
# - Whitelist links

# Nice to Haves
# - CRM For all users - details about email address / location
# - Links analytics - shows details about shared links in analytics
# - Team usage updates
# - Trying to build machine learning to find bad actors across multiple communities.

# - Said he needs to "rethink" dming every time someone receives a harmful link because you don't want 4K dms

# - create a bot that acts as a honeypot user, that any slack community setup
# - all bots connect to a realtime chat  where they share information with each other
# -  listens for dm's and slackbot
# - check urls
# - have a  !warn function  that can be called by trusted community members, which subsequently warns all admins
# - compare hash(email)'s of  flagged users across slacs

# levenstein distance on messages and emails

ChannelJoiner:
# Allows you to define a list of channels to join.
    DEBUG: True
    JOIN_ALL_CHANS: False # Note Bot cannot join groups without an invite.
    CHANNELS: # Define list of channels if JOIN_ALL_CHANS is False
        - "#general"

CommunityWarning:
# Allows community to flag a user or url via !warn http://foo.bar or !warn @jarradhope
    DEBUG: True
    TRIGGER: "!warn"
    MODERATE_CHAN: "#internal-moderator" # Note invite bot into this channel if private.
    WHITELIST:
      - "@jarradhope"

EarlyWarning:
    DEBUG: True
    PUB: ""
    SUB: ""

URLMonitor:
# Monitors DM's, Channels & Groups for Bad URLS
    DEBUG: True

    # Channel which posts any detections, prepending ALERT_USERS to message for notification.
    MODERATE_CHAN: "#internal-moderator" # Note invite bot into this channel if private.
    MODERATORS:
        - "@jarradhope"
        # - "@here"

    # Instructions to get a v4 key here: https://developers.google.com/safe-browsing/v4/get-started
    GOOGLE_SAFE_BROWSING: True
    GOOGLE_SAFE_BROWSING_API_KEY: ""
    
    WARNING_ON_DETECTION: True
    WARNING_MESSAGE : ":warning: Be careful clicking links. It may be safe to visit, but do not send your private keys, ETH or BTC to any address shown on unofficial websites. :warning:"
    
    # BLACKLIST_REFRESH_RATE: 300 # TODO
    BLACKLISTS:
        # https://github.com/MyEtherWallet/ethereum-lists
        - "https://raw.githubusercontent.com/MyEtherWallet/ethereum-lists/master/urls-darklist.json"

AddressMonitor:
# Monitors DM's, Channels & Groups for Addresses
    DEBUG: True
    ADDRESS_REGEX_WARNING: True
    BLACKLISTS:
        - "https://raw.githubusercontent.com/MyEtherWallet/ethereum-lists/master/addresses-darklist.json"